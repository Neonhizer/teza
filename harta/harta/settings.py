"""
Django settings for harta project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from pymongo import MongoClient
import os
from dotenv import load_dotenv
MONGODB_URI = os.environ.get('MONGODB_URI')
load_dotenv()  # Încarcă variabilele din fișierul .env


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r=$1_85u%lzd6(a*eg^k_#!@t@q8*@u#!@&%tts42z4q!iy8jv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'maps',
    'rest_framework',
   
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'harta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'harta.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases






MONGODB_DATABASES = [
    {
        'NAME': 'maps',  
        # 'HOST': 'mongodb+srv://admin:<admin>@cluster0.jbb9s9t.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0',  
       "HOST":  MONGODB_URI,
        'PORT': 27017, 
   
        'ALIAS': 'default',  
    },
]


# Function to get the MongoDB client based on the database alias
def get_mongodb(alias='default'):
     # Retrieve the MongoDB configuration for the specified alias
    config = [db for db in MONGODB_DATABASES if db['ALIAS'] == alias][0]
    client = MongoClient(config['HOST'], config['PORT'])
    db = client[config['NAME']]
    return db


# # Configuration to use PyMongo for performing migrations in Django
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'maps',  
#         'ENFORCE_SCHEMA': False,
#     },
# }





DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'maps',  # sau numele bazei tale de date
        'CLIENT': {
            'host': MONGODB_URI,
        }
    }
}


















# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}


SCHEDULER_AUTOSTART = True